--###############################################
--########### USER PERMISSIONS NEEDED ###########
--###############################################
--Still not sure exactly what permissions are needed.
--All of the below were run previously, but pretty sure they are not all needed.

GRANT ALL ON patheos_data.apex_posts TO system;
GRANT ALL ON patheos_data.apex_blogs TO system;
GRANT ALL ON patheos_data.apex_beliefs TO system;

GRANT SELECT ON patheos_blogs to patheos_data;
GRANT SELECT ON patheos_posts to patheos_data;
GRANT SELECT ON patheos_beliefs to patheos_data;


--###############################################
--######## INSERT NEW BELIEFS INTO APEX #########
--###############################################
create or replace TRIGGER APEX_PATHEOS_NEWBELIEF
  AFTER INSERT OR UPDATE ON patheos_beliefs 
FOR EACH ROW 
begin
   INSERT INTO patheos_data.apex_beliefs
     (BELIEFS_NUMBER, BELIEFS_NAME, BELIEFS_TRADITION, IMAGE, BELIEFS_URL) 
       values (:new.BELIEFS_NUMBER,
        :new.BELIEFS_NAME, 
        :new.BELIEFS_TRADITION, 
        :new.IMAGE, 
        :new.BELIEFS_URL);
end ;

--###############################################
--######## INSERT NEW BLOGS INTO APEX #########
--###############################################
create or replace TRIGGER APEX_PATHEOS_NEWBLOG
  AFTER INSERT OR UPDATE ON patheos_blogs 
FOR EACH ROW 
begin
   --IF (SELECT p.blogs_url FROM patheos_data.apex_blogs a, system.patheos_blogs p
   --         WHERE p.blogs_url = a.blogs_url) IS NULL THEN
   INSERT INTO patheos_data.apex_blogs
     (BLOGS_NUMBER,BLOGS_AUTHOR,BLOGS_IMAGE,BELIEFS_NUMBER,BLOGS_NAME,BLOGS_URL) 
       values (:new.BLOGS_NUMBER,
        :new.BLOGS_AUTHOR,
        :new.BLOGS_IMAGE,
        :new.BELIEFS_NUMBER,
        :new.BLOGS_NAME,
        :new.BLOGS_URL);
    --END IF;
end ;

--###############################################
--######## INSERT NEW POSTS INTO APEX #########
--###############################################
create or replace TRIGGER APEX_PATHEOS_NEWPOST
  AFTER INSERT OR UPDATE ON patheos_posts 
FOR EACH ROW 
begin
   INSERT INTO patheos_data.apex_posts
     (POSTS_NUMBER,POSTS_TITLE,BLOGS_NUMBER,POSTS_AUTHOR,POSTS_DATE,POSTS_TAGS,POSTS_CONTENT,POSTS_IMAGE,POSTS_URL) 
       values (:new.POSTS_NUMBER,
        :new.POSTS_TITLE,
        :new.BLOGS_NUMBER,
        :new.POSTS_AUTHOR,
        :new.POSTS_DATE,
        :new.POSTS_TAGS,
        :new.POSTS_CONTENT,
        :new.POSTS_IMAGE,
        :new.POSTS_URL);
end ;

--###############################################
--############## MIGHT BE DEFAULT ###############
--###############################################
create or replace TRIGGER system.def$_propagator_trig
  BEFORE INSERT ON system.def$_propagator
DECLARE
  prop_count  NUMBER;
BEGIN
  SELECT count(*) into prop_count
    FROM system.def$_propagator;

  IF (prop_count > 0) THEN
    -- Raise duplicate propagator error
    sys.dbms_sys_error.raise_system_error(-23394);
  END IF;
END;

--###############################################
--############## MIGHT BE DEFAULT ###############
--###############################################
create or replace TRIGGER system.repcatlogtrig
AFTER UPDATE OR DELETE ON system.repcat$_repcatlog
BEGIN
  sys.dbms_alert.signal('repcatlog_alert', '');
END;